var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import sanitizeHtml from 'sanitize-html';
/**
 * Sanitizes HTML in a string, removing all HTML tags and attributes.
 * See https://www.npmjs.com/package/sanitize-html for more information.
 * @param text The string to be sanitized.
 * @param options Options to be passed to sanitizeHtml.
 * @returns The sanitized string.
 */
export default function sanitizeOutput(text, options) {
    return sanitizeHtml(text, __assign({ allowedAttributes: false }, options));
}
//# sourceMappingURL=sanitize-html.js.map