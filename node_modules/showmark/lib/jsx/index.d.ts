import { type ShowMarkOptions } from '../converter/index.js';
export type JSXSource = 'react' | 'preact';
export interface JSXCompilerOptions {
    jsxSource?: JSXSource;
    fileName?: string;
    className?: string;
}
/**
 * Compiles markdown content into JSX content.
 * @param content The markdown content to be compiled.
 * @param compilerOptions Options for the compiler. See {@link JSXCompilerOptions}.
 * @param converterOptions Options for the markdown converter. See {@link ShowMarkOptions}.
 * @returns An object with the compiled code, source map, and metadata.
 */
declare const jsxCompiler: (content: string, compilerOptions?: JSXCompilerOptions, converterOptions?: ShowMarkOptions) => {
    code: string;
    map: {
        version: number;
        sources: string[];
        names: string[];
        sourceRoot?: string | undefined;
        sourcesContent?: string[] | undefined;
        mappings: string;
        file: string;
    };
    metadata: import("@babel/core").BabelFileMetadata;
    ast: import("@babel/types").File;
};
export default jsxCompiler;
